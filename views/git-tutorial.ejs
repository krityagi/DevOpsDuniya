<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Git Tutorial</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism.min.css">
    <link rel="stylesheet" href="/styles/dashboard.css">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/prism.min.js"></script>
</head>
<body class="light-mode">
    <nav class="navbar navbar-expand-lg custom-navbar fixed-top">
        <a class="navbar-brand" href="/dashboard">DevOps Duniya</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/about">About</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/contact">Contact</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/services">Services</a>
                </li>
            </ul>
            <form class="form-inline" id="searchForm">
                <input class="form-control mr-sm-2" type="search" id="searchInput" placeholder="Search">
                <button class="btn btn-outline-light my-2 my-sm-0" type="submit">Search</button>
            </form>
            <div class="custom-control custom-switch">
                <input type="checkbox" class="custom-control-input" id="darkModeToggle">
                <label class="custom-control-label" for="darkModeToggle">Dark Mode</label>
            </div>
            <a class="nav-link" href="#" id="profile">Profile</a>
            <a class="nav-link" href="/logout" id="logout">Logout</a>
        </div>
    </nav>
    <div class="container-fluid mt-5">
        <div class="row">
            <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block sidebar">
                <div class="sidebar-sticky">
                    <ul class="nav flex-column">
                        <li class="nav-item">
                            <a class="nav-link active" href="/git-tutorial">Git</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/jenkins-tutorial">Jenkins</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/shell-tutorial">Shell</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/python-tutorial">Python</a>
                        </li>
                        <!-- Add more tutorials here -->
                    </ul>
                </div>
            </nav>
            <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-md-4 main-content">
                <div id="git-tutorial">
                    <h2>Git Tutorial</h2>
                    <p>Git is a distributed version control system that allows developers to track changes in their codebase, collaborate with others, and manage different versions of their projects efficiently. Created by Linus Torvalds in 2005, Git has become an essential tool in modern software development.</p>
                    
                    <h3>Key Features of Git</h3>
                    <ul>
                        <li><strong>Distributed System:</strong> Each developer has a local copy of the entire project history, allowing for offline work and easier collaboration.</li>
                        <li><strong>Branching and Merging:</strong> Git enables the creation of branches to work on features or fixes independently. These branches can later be merged back into the main codebase.</li>
                        <li><strong>Staging Area:</strong> Changes can be reviewed and modified before committing them to the project history.</li>
                        <li><strong>History Tracking:</strong> Git keeps a detailed history of changes, including who made the change and why.</li>
                    </ul>

                    <h3>Basic Git Commands</h3>
                    <ul>
                        <li><code>git init</code>: Initialize a new Git repository.</li>
                        <li><code>git clone [url]</code>: Clone a repository from a remote source.</li>
                        <li><code>git add [file]</code>: Add a file to the staging area.</li>
                        <li><code>git commit -m "message"</code>: Commit changes with a message describing what was done.</li>
                        <li><code>git status</code>: Check the status of your working directory and staging area.</li>
                        <li><code>git push</code>: Push changes to a remote repository.</li>
                        <li><code>git pull</code>: Pull the latest changes from a remote repository.</li>
                    </ul>

                    <h3>Setting Up Git</h3>
                    <ol>
                        <li><strong>Install Git:</strong> Download and install Git from the <a href="https://git-scm.com/">official website</a>.</li>
                        <li><strong>Configure Git:</strong> Set up your name and email address, which will be associated with your commits:
                            <pre><code class="language-bash">git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"</code></pre>
                        </li>
                        <li><strong>Create a Repository:</strong> Navigate to your project directory and initialize a new Git repository:
                            <pre><code class="language-bash">cd /path/to/your/project
git init</code></pre>
                        </li>
                    </ol>

                    <h3>Working with Branches</h3>
                    <ul>
                        <li><strong>Create a New Branch:</strong>
                            <pre><code class="language-bash">git branch new-feature</code></pre>
                        </li>
                        <li><strong>Switch to the New Branch:</strong>
                            <pre><code class="language-bash">git checkout new-feature</code></pre>
                        </li>
                        <li><strong>Merge the Branch:</strong> Once you're done with your changes, you can merge the branch back into the main branch:
                            <pre><code class="language-bash">git checkout main
git merge new-feature</code></pre>
                        </li>
                    </ul>

                    <h3>Advanced Git Commands</h3>
                    <ul>
                        <li><strong>Rebase:</strong> Reapply commits on top of another base tip:
                            <pre><code class="language-bash">git rebase main</code></pre>
                        </li>
                        <li><strong>Stash:</strong> Temporarily store changes that are not ready to be committed:
                            <pre><code class="language-bash">git stash
git stash pop</code></pre>
                        </li>
                        <li><strong>Resolve Merge Conflicts:</strong> Manually resolve conflicts that arise during a merge:
                            <pre><code class="language-bash">git merge feature-branch
# Resolve conflicts in files
git add resolved-file
git commit</code></pre>
                        </li>
                    </ul>

                    <h3>Best Practices for Using Git</h3>
                    <ul>
                        <li><strong>Commit Frequently:</strong> Regular commits make it easier to track changes and revert if necessary.</li>
                        <li><strong>Write Meaningful Commit Messages:</strong> Clear and descriptive messages help understand the purpose of each commit.</li>
                        <li><strong>Use Branches:</strong> Keep your main branch clean and use feature branches for development.</li>
                        <li><strong>Review Changes:</strong> Use the <code>git diff</code> command to review changes before committing.</li>
                    </ul>
                </div>
            </main>
        </div>
    </div>

    <script>
        // Dark mode toggle functionality
        const toggleSwitch = document.getElementById('darkModeToggle');
        const body = document.body;

        toggleSwitch.addEventListener('change', () => {
            body.classList.toggle('dark-mode');
            body.classList.toggle('light-mode');
        });

        // Search functionality
        document.getElementById('searchForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const query = document.getElementById('searchInput').value;
            alert('You searched for: ' + query); // Replace with actual search functionality
        });

        // Logout functionality
        document.getElementById('logout').addEventListener('click', function (event) {
            event.preventDefault();
            fetch('/logout', { method: 'GET' })
                .then(response => response.json())
                .then(result => {
                    if (result.message === 'Logout successful') {
                        window.location.href = result.redirectUrl;
                    } else {
                        alert('Logout failed: ' + result.message);
                    }
                })
                .catch(error => {
                    console.error('Logout Error:', error);
                    alert('An error occurred during logout.');
                });
        });

        // Profile modal functionality
        const profileLink = document.getElementById('profile');
        profileLink.onclick = function(event) {
            event.preventDefault();
            $('#profileModal').modal('show');
        }
    </script>
</body>
</html>